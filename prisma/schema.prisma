datasource db {
  provider = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

generator client {
  provider = "prisma-client-js"
}

model department {
  id         Int    @id @default(autoincrement())
  name       String
  is_deleted Boolean @default(false)

  users user[]
}

model user {
  id               Int    @id @default(autoincrement())
  firstName        String
  secondName       String
  fatherLastName   String
  motherLastName   String
  email            String
  isAvailable      Boolean @default(true)
  upbCode          Int
  is_deleted       Boolean @default(false)
  is_confirmed     Boolean @default(false)
  phone            String
  hashed_password  String  @default("TickTrackNewUser")

  role_id      Int
  role         role        @relation(fields: [role_id], references: [id])
  department_id Int
  department   department  @relation(fields: [department_id], references: [id])

  student        student?
  administrative administrative?

  user_state_history user_state_history[]
}

model role {
  id         Int    @id @default(autoincrement())
  name       String
  is_deleted Boolean @default(false)

  users             user[]
  role_permission   role_permission[]
}

model permission {
  id         Int    @id @default(autoincrement())
  name       String
  is_deleted Boolean @default(false)

  role_permission role_permission[]
}

model role_permission {
  role_id       Int
  permission_id Int
  is_deleted    Boolean @default(false)

  role       role       @relation(fields: [role_id], references: [id])
  permission permission @relation(fields: [permission_id], references: [id])

  @@id([role_id, permission_id])
}

model student {
  id         Int    @id
  user       user   @relation(fields: [id], references: [id])
  semester   Int
  is_deleted Boolean @default(false)

  commitment   commitment[]
  inscription  inscription[]
  transaction  transaction[]
}

model administrative {
  id         Int    @id
  user       user   @relation(fields: [id], references: [id])
  upb_role   String
  is_deleted Boolean @default(false)

  work work[]
}

model commitment {
  service_details_id Int
  student_id         Int
  is_current         Boolean
  is_deleted         Boolean @default(false)

  service_details service_details @relation(fields: [service_details_id], references: [id])
  student         student         @relation(fields: [student_id], references: [id])

  @@id([service_details_id, student_id])
}

model service_details {
  id                 Int             @id @default(autoincrement())
  scholarship_id     Int
  scholarship        scholarship     @relation(fields: [scholarship_id], references: [id])
  percentage         Float
  hours_per_semester Int
  total_hours        Int
  is_deleted         Boolean         @default(false)

  commitment commitment[]
}

model scholarship {
  id              Int               @id @default(autoincrement())
  name            String
  description     String
  is_deleted      Boolean @default(false)

  service_details service_details[]
}

model semester {
  id           Int          @id @default(autoincrement())
  name         String
  start_date   String
  end_date     String
  is_deleted   Boolean @default(false)

  inscription  inscription[]
  work         work[]
}

model inscription {
  id           Int      @id @default(autoincrement())
  student_id   Int
  student      student  @relation(fields: [student_id], references: [id])
  semester_id  Int
  semester     semester @relation(fields: [semester_id], references: [id])
  created_at   String
  is_deleted   Boolean @default(false)
}

model work {
  id                  Int              @id @default(autoincrement())
  title               String
  description         String
  date_begin          String
  date_end            String
  administrative_id   Int
  administrative      administrative   @relation(fields: [administrative_id], references: [id])
  semester_id         Int
  semester            semester         @relation(fields: [semester_id], references: [id])
  is_deleted          Boolean          @default(false)

  work_history  work_history[]
  transaction   transaction[]
}

model work_history {
  id         Int   @id @default(autoincrement())
  work_id    Int
  work       work  @relation(fields: [work_id], references: [id])
  status     String
  date       String
  is_deleted Boolean @default(false)
}

model transaction {
  id                     Int      @id @default(autoincrement())
  work_id                Int
  work                   work     @relation(fields: [work_id], references: [id])
  student_id             Int
  student                student  @relation(fields: [student_id], references: [id])
  date                   String
  hours                  Int
  comment_student        String
  comment_administrative String
  is_deleted             Boolean  @default(false)
}

model user_state_history {
  id         Int   @id @default(autoincrement())
  user_id    Int
  user       user  @relation(fields: [user_id], references: [id])
  status     String
  date       String
  is_deleted Boolean @default(false)
}
